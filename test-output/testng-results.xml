<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="12" total="20" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-29T13:48:44 IST" name="Suite" finished-at="2024-01-29T13:50:01 IST" duration-ms="76320">
    <groups>
    </groups>
    <test started-at="2024-01-29T13:48:44 IST" name="Test" finished-at="2024-01-29T13:50:01 IST" duration-ms="76320">
      <class name="testjava.addNewAdress">
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:28 IST" name="beforeMethods" finished-at="2024-01-29T13:49:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.addNewAdress.addNewdeliveryaddress() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method retried="true" signature="addNewdeliveryaddress()[pri:1, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:28 IST" name="addNewdeliveryaddress" finished-at="2024-01-29T13:49:30 IST" duration-ms="2707" status="SKIP">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found
  (Session info: chrome=121.0.6167.86)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-LE5A5LE', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.86, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\sss\AppData\Local\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62435}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79c0aba5b46ab6731df8d06ca1805e94]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found
  (Session info: chrome=121.0.6167.86)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-LE5A5LE', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.86, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\sss\AppData\Local\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62435}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79c0aba5b46ab6731df8d06ca1805e94
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at pageEvents.newAdressPageEvent.gotoaddadresspage(newAdressPageEvent.java:25)
at testjava.addNewAdress.addNewdeliveryaddress(addNewAdress.java:14)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewdeliveryaddress -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:30 IST" name="afterMethods" finished-at="2024-01-29T13:49:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewdeliveryaddress status=SKIP method=addNewAdress.addNewdeliveryaddress()[pri:1, instance:testjava.addNewAdress@67d48005] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:30 IST" name="beforeMethods" finished-at="2024-01-29T13:49:30 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.addNewAdress.addNewdeliveryaddress() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="addNewdeliveryaddress()[pri:1, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:30 IST" name="addNewdeliveryaddress" finished-at="2024-01-29T13:49:50 IST" duration-ms="19530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewdeliveryaddress -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:50 IST" name="afterMethods" finished-at="2024-01-29T13:49:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewdeliveryaddress status=SUCCESS method=addNewAdress.addNewdeliveryaddress()[pri:1, instance:testjava.addNewAdress@67d48005] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:50 IST" name="beforeMethods" finished-at="2024-01-29T13:49:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.addNewAdress.removeadress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="removeadress()[pri:2, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:50 IST" name="removeadress" finished-at="2024-01-29T13:49:53 IST" duration-ms="2922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeadress -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.addNewAdress@67d48005]" started-at="2024-01-29T13:49:53 IST" name="afterMethods" finished-at="2024-01-29T13:49:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=removeadress status=SUCCESS method=addNewAdress.removeadress()[pri:2, instance:testjava.addNewAdress@67d48005] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- testjava.addNewAdress -->
      <class name="testjava.Logoutfromwebsite">
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.Logoutfromwebsite@9f116cc]" started-at="2024-01-29T13:49:53 IST" name="beforeMethods" finished-at="2024-01-29T13:49:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.Logoutfromwebsite.logouttt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="logouttt()[pri:1, instance:testjava.Logoutfromwebsite@9f116cc]" started-at="2024-01-29T13:49:53 IST" name="logouttt" finished-at="2024-01-29T13:49:57 IST" duration-ms="4265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logouttt -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.Logoutfromwebsite@9f116cc]" started-at="2024-01-29T13:49:57 IST" name="afterMethods" finished-at="2024-01-29T13:49:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logouttt status=SUCCESS method=Logoutfromwebsite.logouttt()[pri:1, instance:testjava.Logoutfromwebsite@9f116cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- testjava.Logoutfromwebsite -->
      <class name="testjava.LoginToWebsite">
        <test-method is-config="true" signature="beforeeclass(java.lang.String)[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:48:31 IST" name="beforeeclass" finished-at="2024-01-29T13:48:44 IST" duration-ms="13621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeclass -->
        <test-method is-config="true" signature="beforeTests()[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:48:44 IST" name="beforeTests" finished-at="2024-01-29T13:48:45 IST" duration-ms="1022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTests -->
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:48:45 IST" name="beforeMethods" finished-at="2024-01-29T13:48:45 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.LoginToWebsite.LoginToAmazon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="LoginToAmazon()[pri:1, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:48:45 IST" name="LoginToAmazon" finished-at="2024-01-29T13:49:00 IST" duration-ms="14690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginToAmazon -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:49:00 IST" name="afterMethods" finished-at="2024-01-29T13:49:00 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginToAmazon status=SUCCESS method=LoginToWebsite.LoginToAmazon()[pri:1, instance:testjava.LoginToWebsite@6b927fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method is-config="true" signature="afterTests()[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:49:57 IST" name="afterTests" finished-at="2024-01-29T13:50:01 IST" duration-ms="3461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTests -->
        <test-method is-config="true" signature="afterrclass()[pri:0, instance:testjava.LoginToWebsite@6b927fb]" started-at="2024-01-29T13:50:01 IST" name="afterrclass" finished-at="2024-01-29T13:50:06 IST" duration-ms="5176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterrclass -->
      </class> <!-- testjava.LoginToWebsite -->
      <class name="testjava.ManageList">
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:00 IST" name="beforeMethods" finished-at="2024-01-29T13:49:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.ManageList.createListaaa()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="createListaaa()[pri:1, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:00 IST" name="createListaaa" finished-at="2024-01-29T13:49:11 IST" duration-ms="10876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createListaaa -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:11 IST" name="afterMethods" finished-at="2024-01-29T13:49:11 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createListaaa status=SUCCESS method=ManageList.createListaaa()[pri:1, instance:testjava.ManageList@294425a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:11 IST" name="beforeMethods" finished-at="2024-01-29T13:49:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.ManageList.listmanage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="listmanage()[pri:2, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:11 IST" name="listmanage" finished-at="2024-01-29T13:49:20 IST" duration-ms="9067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listmanage -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:20 IST" name="afterMethods" finished-at="2024-01-29T13:49:20 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=listmanage status=SUCCESS method=ManageList.listmanage()[pri:2, instance:testjava.ManageList@294425a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method is-config="true" signature="beforeMethods(java.lang.reflect.Method)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:20 IST" name="beforeMethods" finished-at="2024-01-29T13:49:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testjava.ManageList.delthelist() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethods -->
        <test-method signature="delthelist()[pri:3, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:20 IST" name="delthelist" finished-at="2024-01-29T13:49:28 IST" duration-ms="7534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delthelist -->
        <test-method is-config="true" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:testjava.ManageList@294425a7]" started-at="2024-01-29T13:49:28 IST" name="afterMethods" finished-at="2024-01-29T13:49:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delthelist status=SUCCESS method=ManageList.delthelist()[pri:3, instance:testjava.ManageList@294425a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- testjava.ManageList -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
